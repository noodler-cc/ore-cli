name: Build

on:
  push:
    branches: ["master"]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: ore

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - id: version
        run: echo version="$(cargo metadata --no-deps --quiet --color never | jq -r '.packages[].version')-$(git describe --always --dirty=_modified)" >> "$GITHUB_OUTPUT"

  build-x86_64:
    name: Build x86_64
    needs: version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Rust
        run: rustup target add x86_64-unknown-linux-gnu
        
      - name: Configure cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: release-${{ runner.os }}-cargo-x86_64-unknown-linux-gnu-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Build
        run: cargo build --release --target x86_64-unknown-linux-gnu
        
      - name: Strip binary
        run: strip target/x86_64-unknown-linux-gnu/release/${{ env.BINARY_NAME }}
        
      - name: Package
        run: |
          rm -rf target/dist
          mkdir -p target/dist
          cp target/x86_64-unknown-linux-gnu/release/${{ env.BINARY_NAME }} target/dist/${{ env.BINARY_NAME }}-${{ needs.version.outputs.version }}-x86_64-unknown-linux-gnu
          
      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}-${{ needs.version.outputs.version }}-x86_64-unknown-linux-gnu
          path: target/dist/*

  build-aarch64:
    name: Build aarch64
    needs: version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
    
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y openssl pkg-config libssl-dev gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
    
      - name: Install Rust nightly
        run: |
          rustup toolchain install nightly
          rustup default nightly
          rustup target add aarch64-unknown-linux-gnu --toolchain nightly
        
      - name: Install cargo-xbuild
        run: cargo install cargo-xbuild
    
      - name: Clean previous build files
        run: cargo clean
    
      - name: Build with cargo-xbuild
        env:
          CC: aarch64-linux-gnu-gcc
          CXX: aarch64-linux-gnu-g++
          RUSTFLAGS: "-C linker=aarch64-linux-gnu-gcc"
        run: cargo +nightly xbuild --release --target aarch64-unknown-linux-gnu
        
      - name: Strip binary
        run: strip target/aarch64-unknown-linux-gnu/release/${{ env.BINARY_NAME }}
        
      - name: Package
        run: |
          rm -rf target/dist
          mkdir -p target/dist
          cp target/aarch64-unknown-linux-gnu/release/${{ env.BINARY_NAME }} target/dist/${{ env.BINARY_NAME }}-${{ needs.version.outputs.version }}-aarch64-unknown-linux-gnu
        
      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}-${{ needs.version.outputs.version }}-aarch64-unknown-linux-gnu
            