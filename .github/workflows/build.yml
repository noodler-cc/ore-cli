name: Build

on:
  push:
    branches: ["master"]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: ore

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - id: version
        run: echo version="$(cargo metadata --no-deps --quiet --color never | jq -r '.packages[].version')-$(git describe --always --dirty=_modified)" >> "$GITHUB_OUTPUT"

  build-ubuntu:
    name: Build Ubuntu
    needs: version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        run: rustup target add x86_64-unknown-linux-gnu
        
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y openssl pkg-config libssl-dev

      - name: Configure cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: release-${{ runner.os }}-cargo-x86_64-unknown-linux-gnu-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Build
        run: cargo build --release --target x86_64-unknown-linux-gnu
        
      - name: Strip binary
        run: strip target/x86_64-unknown-linux-gnu/release/${{ env.BINARY_NAME }}
        
      - name: Package
        run: |
          rm -rf target/dist
          mkdir -p target/dist
          cp target/x86_64-unknown-linux-gnu/release/${{ env.BINARY_NAME }} target/dist/${{ env.BINARY_NAME }}-${{ needs.version.outputs.version }}-x86_64-unknown-linux-gnu
          
      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}-${{ needs.version.outputs.version }}-x86_64-unknown-linux-gnu
          path: target/dist/*

  build-macos:
    name: Build macOS
    needs: version
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: brew install openssl pkg-config

      - name: Setup Rust
        run: rustup target add x86_64-apple-darwin
        
      - name: Configure cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: release-${{ runner.os }}-cargo-x86_64-apple-darwin-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release --target x86_64-apple-darwin

      - name: Strip binary
        run: strip target/x86_64-apple-darwin/release/${{ env.BINARY_NAME }}

      - name: Package
        run: |
          rm -rf target/dist
          mkdir -p target/dist
          cp target/x86_64-apple-darwin/release/${{ env.BINARY_NAME }} target/dist/${{ env.BINARY_NAME }}-${{ needs.version.outputs.version }}-x86_64-apple-darwin

      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}-${{ needs.version.outputs.version }}-x86_64-apple-darwin
          path: target/dist/*