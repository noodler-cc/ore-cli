name: Build

on:
  push:
    branches: ["master"]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: ore

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - id: version
        run: echo version="$(cargo metadata --no-deps --quiet --color never | jq -r '.packages[].version')-$(git describe --always --dirty=_modified)" >> "$GITHUB_OUTPUT"

  build:
    name: Build
    needs: version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Rust
        run: rustup target add ${{ matrix.target }}
        
      - name: Install additional toolchains and dependencies
        run: |
          if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
            sudo apt-get update
            sudo apt-get install -y gcc-aarch64-linux-gnu libssl-dev:arm64 pkg-config
            mkdir -p .cargo
            echo '[target.aarch64-unknown-linux-gnu]' >> .cargo/config
            echo 'linker = "aarch64-linux-gnu-gcc"' >> .cargo/config
            export OPENSSL_DIR=/usr/aarch64-linux-gnu
            export OPENSSL_LIB_DIR=/usr/aarch64-linux-gnu/lib
            export OPENSSL_INCLUDE_DIR=/usr/aarch64-linux-gnu/include
          else
            sudo apt-get update
            sudo apt-get install -y libssl-dev pkg-config
          fi
        
      - name: Configure cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: release-${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Build
        env:
          OPENSSL_DIR: ${{ env.OPENSSL_DIR }}
          OPENSSL_LIB_DIR: ${{ env.OPENSSL_LIB_DIR }}
          OPENSSL_INCLUDE_DIR: ${{ env.OPENSSL_INCLUDE_DIR }}
        run: cargo build --release --target ${{ matrix.target }}
        
      - name: Strip binary
        run: |
          strip_tool="strip"
          if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
            strip_tool="aarch64-linux-gnu-strip"
          fi
          $strip_tool target/${{ matrix.target }}/release/${{ env.BINARY_NAME }}
        
      - name: Package
        run: |
          rm -rf target/dist
          mkdir -p target/dist
          cp target/${{ matrix.target }}/release/${{ env.BINARY_NAME }} target/dist/${{ env.BINARY_NAME }}-${{ needs.version.outputs.version }}-${{ matrix.target }}
          
      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}-${{ needs.version.outputs.version }}-${{ matrix.target }}
          path: target/dist/*
